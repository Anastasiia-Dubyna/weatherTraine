{"version":3,"file":"commonHelpers.js","sources":["../src/js/createMarkup.js","../src/js/api/weatherApi.js","../src/js/api/opencagedataApi.js","../src/js/api/pixabayApi.js","../src/js/helpers/getRandomIndex.js","../src/js/helpers/setBackground.js","../src/main.js"],"sourcesContent":["import { format } from 'date-fns';\n\nconst weatherWrapper = document.querySelector('.weather__wrapper');\n\nexport const createMarkup = ({ name, main, sys, clouds, weather }) => {\n  const sunrise = format(new Date(sys.sunrise * 1000), 'H:m');\n  const sunset = format(new Date(sys.sunset * 1000), 'H:m');\n\n  const markup = `<div class=\"weather__card\">\n      <h2 class=\"city-name\">${name}</h2>\n      <ul class=\"weather-info list\">\n          <li class=\"weather-info-item\">\n              <p class=\"temp\">Температура: ${main.temp}<sup>&#176;</sup></p>\n          </li>\n          <li class=\"weather-info-item\">\n              <p class=\"feels-like-temp\">Відчувається як: ${main.feels_like}<sup>&#176;</sup></p>\n          </li>\n          <li class=\"weather-info-item\">\n              <p class=\"sunrise-time\">Схід сонця: ${sunrise}</p>\n          </li>\n          <li class=\"weather-info-item\">\n              <p class=\"sunset-time\">Захід сонця: ${sunset}</p>\n          </li>\n          <li class=\"weather-info-item\">\n              <p class=\"clouds\">Хмарність: ${clouds.all}%</p>\n          </li>\n          <li><img src=\"https://openweathermap.org/img/wn/${weather[0].icon}@2x.png\" alt=\"${weather[0].description}\" /></li>\n      </ul>\n  </div>`;\n  weatherWrapper.insertAdjacentHTML('beforeend', markup);\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.openweathermap.org/data/2.5',\n  params: {\n    appid: '95632b02f9162f375a368971925f5209',\n    units: 'metric',\n  },\n});\n\nexport const getWeatherByQuery = async city => {\n  const { data } = await instance.get(`/weather`, {\n    params: {\n      q: city,\n    },\n  });\n  return data;\n};\n\nexport const getWeatherByCoords = async ({ latitude, longitude }) => {\n  // https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={API key}\n  const { data } = await instance.get(`/weather`, {\n    params: {\n      lat: latitude,\n      lon: longitude,\n    },\n  });\n  return data;\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.opencagedata.com/geocode/v1/json',\n  params: {\n    key: 'd4683b09d0c94ec0aebf0b2e043decbf',\n    language: 'en',\n  },\n});\n\nexport const getUserInfo = async ({ latitude, longitude }) => {\n  const urlPosition = `?q=${latitude}+${longitude}`;\n  const { data } = await instance.get(urlPosition);\n  return data.results[0].components.country;\n};\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://pixabay.com/api/',\n  params: {\n    image_type: 'backgrounds',\n    orientation: 'horizontal',\n    per_page: '40',\n    key: '37485893-252f507e861118bf45a5e3b29',\n  },\n});\n\nexport const getPhotos = async place => {\n  const { data } = await instance.get('', {\n    params: {\n      q: place,\n    },\n  });\n  return data.hits;\n};\n","export const getRandomIndex = max => {\n  return Math.floor(Math.random() * (max + 1) + 1);\n};\n","import { getRandomIndex } from './getRandomIndex';\n\nexport const setBackground = hits => {\n  const index = getRandomIndex(hits.length - 1);\n  console.log(index);\n  const { largeImageURL } = hits[index];\n  document.body.style = `background: linear-gradient(rgba(255, 255, 53, 0.1), rgba(48, 62, 143, 0.1 )),\n  url('${largeImageURL}') center fixed; background-size: cover;`;\n};\n","import 'material-icons/iconfont/material-icons.css';\nimport { createMarkup } from './js/createMarkup';\nimport { getWeatherByCoords, getWeatherByQuery } from './js/api/weatherApi';\nimport { getUserInfo } from './js/api/opencagedataApi';\nimport { getPhotos } from './js/api/pixabayApi';\nimport { setBackground } from './js/helpers/setBackground';\nimport { format } from 'date-fns';\nimport { refs } from './js/refs';\n\nloadPage();\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  const { value } = e.target.elements.user_country;\n  if (!value) {\n    return;\n  }\n  getWeatherByQuery(value).then(data => {\n    createMarkup(data);\n  });\n}\n\nfunction loadPage() {\n  const success = pos => {\n    getWeatherByCoords(pos.coords).then(createMarkup);\n    getUserInfo(pos.coords).then(getPhotos).then(setBackground);\n  };\n\n  navigator.geolocation.getCurrentPosition(success);\n}\n\nconst timer = setInterval(() => {\n  refs.dateSpan.textContent = format(new Date(), 'MMM do');\n  refs.timeSpan.textContent = format(new Date(), 'HH:mm:ss');\n}, 1000);\n"],"names":["weatherWrapper","createMarkup","name","main","sys","clouds","weather","sunrise","format","sunset","markup","instance","axios","getWeatherByQuery","city","data","getWeatherByCoords","latitude","longitude","getUserInfo","urlPosition","getPhotos","place","getRandomIndex","max","setBackground","hits","index","largeImageURL","loadPage","refs","handleSubmit","value","success","pos"],"mappings":"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"}